@startuml
!include C:\Users\arkop\git\IOF-Visual\ontopuml\iof.iuml

' class(p1, iof:MaterialProduct)
' class(p2, iof:MaterialProductRole)
' class(p3, bfo:MaterialEntity)

' ' equivalent(iof:MaterialProduct, bfo:MaterialEntity, right)
' ' equiSome(p1, iof:hasRole, p2, right)

' andSome(c1, p3, iof:hasRole, p2, right, right)
' ' equivalent(p1, c1, right)

' subClass(c1, p1)

' class(c1, iof:MeasurementICE)
' oClass(bfo:Process)
' oClass(bfo:ProcessBoundary)

' union(u1, '["bfo:Process", "bfo:ProcessBoundary"]', down)
' subSome(c1, iof:isAbout, u1, right)

' class(ev, ns:ElectricVehicle)
' class(bat, ns:Battery)
' ' superSome(ns:ElectricVehicle, ns:poweredBy, ns:Battery)
' ' someCard(pb, ns:poweredBy, bat, "exactly", 2)
' ' equivalent(ev, pb, right)
' equiSome(ev, ns:poweredBy, bat)

' class(c, ns:Car)
' class(w, ns:Wheel)
' someCard(hw, ns:contains, w, exactly, 4)
' equivalent(c, hw, right)

' someDataCard(w, ns:hasDiameter, xsd:decimal, max, 14)

' equiSome(bfo:ProcessBoundary, bfo:continuantPartOf, bfo:Process, "<<subset>> <<some>>")

' --------------------------------------------------------- '
' Class4 = Class1 and property1 some (class2 or Class3)
' --------------------------------------------------------- '
' class(c1, Class1)
' class(c2, Class2)
' class(c3, Class3)
' class(c4, Class4)

' union(u23, '["c2", "c3"]', right)
' andSome(s121, c1, property1, u23, right)
' subClass(s121, c4, down)
' --------------------------------------------------------- '
' oClass(ns:Class1)
' oClass(ns:Class2)
' oClass(ns:Class3)
' oClass(ns:Class4)

' union(u23, '["ns:Class2", "ns:Class3"]', right)
' xSome(ns:Class4, ns:property1, u23, " ", right)
' subClass(ns:Class4, ns:Class1)

oClass(bfo:object)
oClass(iof:Material)
' union(a, '["bfo:object", "iof:Material"]')
allDifferent('["bfo:object", "iof:Material"]')

@enduml